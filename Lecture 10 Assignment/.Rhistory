#scale_fill_gradient(low=max(c),high=min(c))
scale_fill_gradientn(colours=FFFFFF-c)
c
#scale_fill_gradient(low=max(c),high=min(c))
scale_fill_gradientn(colours=max(c_-c)
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=Murder)) +
#scale_fill_gradient(low=max(c),high=min(c))
scale_fill_gradientn(colours=max(c)-c)
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=Murder)) +
#scale_fill_gradient(low=max(c),high=min(c))
scale_fill_gradientn(colours=max(c)-c)
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=Murder)) +
scale_fill_gradient(low=max(c),high=min(c))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(fill=c)
library(ggplot2)
library(reshape2)
library(dplyr)  # required for arrange()
library(colorspace)
library(viridis)
library(maps) # for the state map data
library(mapproj)
murder_rates <- read.csv(file = 'MurderRate.csv')
murder_rates$state <- tolower(murder_rates$state)
states_map<-map_data("state") #extracts data from the states map
crimes<-data.frame(state=tolower(rownames(USArrests)),USArrests)
crimes<-merge(crimes,murder_rates,by="state")
crime_map<-merge(states_map,crimes,by.x="region",by.y="state")
crime_map<-arrange(crime_map,group,order)
c = hsv((max(crime_map$Murder)-crime_map$Murder)/(max(crime_map$Murder)-min(crime_map$Murder))/7,(crime_map$Murder-min(crime_map$Murder))/(max(crime_map$Murder)-min(crime_map$Murder)),.95)
# ggplot(crime_map,aes(x=long,y=lat,group=group)) +
#   coord_map("polyconic") +
#   geom_polygon(aes(fill=Murder)) +
#   scale_fill_gradient(low=max(c),high=min(c))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(fill=c)
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(fill=c,show.legend = TRUE)
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(fill=c,aes(show.legend = TRUE))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(fill=c,show.legend = TRUE)
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=Murder)) +
scale_fill_gradient(low=max(c),high=min(c))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(fill=c,show.legend = TRUE)
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=Murder)) +
scale_fill_gradientn(colors = c(max(c),(max(c)+min(c))/2,min)c)
scale_fill_gradientn(colors = c(max(c),(max(c)+min(c))/2,min(c))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=Murder)) +
scale_fill_gradientn(colors = c(max(c),(max(c)+min(c))/2,min(c)))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=Murder)) +
scale_fill_gradientn(colors = c(max(c),(max(c)+min(c))/2,min(c)))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=Murder)) +
scale_fill_gradientn(colors = c(max(c),hsv(1/14,.5,.95),min(c)))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(fill=c,show.legend = TRUE)
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=Murder)) +
scale_fill_gradientn(colors = c(max(c),hsv(1/14,.5,.95),min(c)))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(fill=c) +
scale_fill_gradientn(colors = c(max(c),hsv(1/14,.5,.95),min(c)))
ggplot(crime_map,aes(x=long,y=lat,group=group,fill=Murder)) +
coord_map("polyconic") +
geom_polygon(fill=c) +
scale_fill_gradientn(colors = c(max(c),hsv(1/14,.5,.95),min(c)))
ggplot(crime_map,aes(x=long,y=lat,group=group,fill=Murder)) +
coord_map("polyconic") +
geom_polygon(fill=c,aes(fill=Murder)) +
scale_fill_gradientn(colors = c(max(c),hsv(1/14,.5,.95),min(c)))
ggplot(crime_map,aes(x=long,y=lat,group=group,fill=Murder)) +
coord_map("polyconic") +
geom_polygon() +
scale_fill_gradientn(colors = c(max(c),hsv(1/14,.5,.95),min(c)))
source('~/Documents/CS_Courses/CS_710/Color/USArrests.R', echo=TRUE)
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(fill=c)
library(ggplot2)
diamonds <- read.csv(file = 'diamonds')
library(ggplot2)
diamonds <- read.csv(file = 'diamonds')
diamonds <- read.csv(file = 'diamonds.csv')
setwd("~/Documents/CS_Courses/CS_710/Lecture 10 Assignment")
diamonds <- read.csv(file = 'diamonds.csv')
diamonds
ggplot(data=diamonds,aes(x="",y=cut,fill=group)) +
geom_bar(stat="identity")
ggplot(data=diamonds,aes(x="",y=cut,fill=cut)) +
geom_bar(stat="identity")
ggplot(data=diamonds,aes(x="",y=cut,fill=cut)) +
geom_bar(stat="identity") +
coord_polar("y")
ggplot(data=diamonds,aes(x="",y=cut,fill=cut)) +
geom_bar(stat="identity",width=1) +
coord_polar("y",start=0)
ggplot(data=diamonds,aes(x="",y=cut,fill=cut)) +
geom_bar()
ggplot(data=diamonds,aes(y=cut,fill=cut)) +
geom_bar()
ggplot(data=diamonds,aes(x=cut,fill=cut)) +
geom_bar()
diamonds$cut <- factor(diamonds$cut,levels=c("Fair","Good","Very Good","Premium","Ideal"))
ggplot(data=diamonds,aes(x=cut,fill=cut)) +
geom_bar()
ggplot(data=diamonds,aes(x=clarity,fill=clarity)) +
geom_bar()
ggplot(data=diamonds,aes(x=cut,fill=clarity)) +
geom_bar()
diamonds$cut
diamonds$clarity
diamonds$clarity <- factor(diamonds$clarity,levels=c("I1", "SI2", "SI1", "VS2", "VS1", "VVS2", "VVS1", "IF"))
ggplot(data=diamonds,aes(x=clarity,fill=clarity)) +
geom_bar()
ggplot(data=diamonds,aes(x=cut,fill=cut)) +
geom_bar()
ggplot(data=diamonds,aes(x=clarity,fill=cut)) +
geom_bar()
ggplot(data=diamonds,aes(x=cut,fill=clarity)) +
geom_bar()
ggplot(data=diamonds,aes(x=clarity,fill=cut)) +
geom_bar()
ggplot(data=diamonds,aes(x=cut,fill=cut)) +
geom_bar("identity")
ggplot(data=diamonds,aes(fill=cut)) +
geom_bar("identity")
ggplot(data=diamonds,aes(x="",fill=cut)) +
geom_bar("identity")
View(volcano2)
ggplot(data=diamonds,aes(x="",y=cut,fill=cut)) +
geom_bar(stat="identity")
ggplot(data=diamonds,aes(x="",fill=cut)) +
geom_bar(stat="identity")
ggplot(data=diamonds,aes(x=cut,y="",fill=cut)) +
geom_bar(stat="identity")
ggplot(data=diamonds,aes(x=cut,fill=cut)) +
geom_bar(stat="identity")
ggplot(data=diamonds,aes(y=cut,fill=cut)) +
geom_bar(stat="identity")
ggplot(data=diamonds,aes(x="",y=cut,fill=cut)) +
geom_bar(position="fill",stat="identity")
ggplot(data=diamonds,aes(x=cut,y=cut,fill=cut)) +
geom_bar(position="fill",stat="identity")
ggplot(data=diamonds,aes(x=cut,fill=cut)) +
geom_bar(position="fill",stat="identity")
ggplot(data=diamonds,aes(x=clarity,fill=clarity)) +
geom_bar(position="fill")
ggplot(data=diamonds,aes(x=clarity,fill=cut)) +
geom_bar(position="fill",stat="identity")
ggplot(data=diamonds,aes(x=clarity,fill=cut)) +
geom_bar(position="fill",stat="identity")
#Stacked Bar
ggplot(data=diamonds,aes(x=cut,fill=cut)) +
geom_bar()
#Stacked Bar
ggplot(data=diamonds,aes(x=cut,fill=cut)) +
geom_bar(stat="identity")
#Stacked Bar
ggplot(data=diamonds,aes(x=cut,y="",fill=cut)) +
geom_bar(stat="identity")
diamonds <- groupby(cut)
diamonds <- group_by(diamonds,cut)
diamonds <- diamonds %<% group_by(cut)
diamonds <- diamonds %>% group_by(cut)
temp <- diamonds %>% group_by(cut)
View(volcano2)
df <- diamonds %>%
group_by(color, cut) %>%
summarise(count = n()) %>%
group_by(color) %>%
mutate(per=count/sum(count)) %>%
ungroup()
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(dyplr)
install.packages("dplyr")
library(ggplot2)
library(dyplr)
diamonds <- read.csv(file = 'diamonds.csv')
diamonds$cut <- factor(diamonds$cut,levels=c("Fair","Good","Very Good","Premium","Ideal"))
diamonds$clarity <- factor(diamonds$clarity,levels=c("I1", "SI2", "SI1", "VS2", "VS1", "VVS2", "VVS1", "IF"))
df <- diamonds %>%
group_by(cut) %>%
summarise(count = n()) %>%
mutate(per=count/sum(count)) %>%
ungroup()
df <- diamonds %>% group_by(cut)
library(dyplr)
install.packages("dplyr")
install.packages("dplyr")
library(dyplr)
library(dyplr)
library(ggplot2)
library(dyplr)
df <- diamonds %>% group_by(cut)
library(dplyr)
library(ggplot2)
library(dplyr)
diamonds <- read.csv(file = 'diamonds.csv')
diamonds$cut <- factor(diamonds$cut,levels=c("Fair","Good","Very Good","Premium","Ideal"))
diamonds$clarity <- factor(diamonds$clarity,levels=c("I1", "SI2", "SI1", "VS2", "VS1", "VVS2", "VVS1", "IF"))
df <- diamonds %>% group_by(cut)
df
df <- diamonds %>% group_by(cut) %>%
summarise(count = n()) %>%
group_by(color) %>%
mutate(per=count/sum(count)) %>%
ungroup()
df <- diamonds %>% group_by(cut) %>%
summarise(count = n()) %>%
mutate(per=count/sum(count)) %>%
ungroup()
df
#Side-by-Side Bar
ggplot(data=df,aes(x=cut,fill=per)) +
geom_bar()
#Side-by-Side Bar
ggplot(data=df,aes(x=cut,fill=cut)) +
geom_bar()
#Side-by-Side Bar
ggplot(data=df,aes(x=cut,fill=count)) +
geom_bar()
#Side-by-Side Bar
ggplot(data=diamonds,aes(x=cut,fill=cut)) +
geom_bar()
#Stacked Bar
ggplot(data=df,aes(x=cut,y="",fill=cut)) +
geom_bar(stat="identity")
#Stacked Bar
ggplot(data=df,aes(x="",y=per,fill=cut)) +
geom_bar(stat="identity")
#Stacked Bar
ggplot(data=df,aes(x="",y=per,fill=cut)) +
geom_bar(stat="identity", width=1)
#Pie
ggplot(df, aes(x= "", y = per, fill=cut)) +
geom_col() +
coord_polar("y", start=0) +
scale_y_continuous(labels = scales::percent)
#Pie
ggplot(df, aes(x= "", y = per, fill=cut)) +
geom_col() +
coord_polar("y", start=0) +
ggplot(data=diamonds,aes(x=clarity,fill=clarity)) +
geom_bar()
#Pie
ggplot(df, aes(x= "", y = per, fill=cut)) +
geom_col() +
coord_polar("y", start=0)
#Pie
ggplot(df, aes(x= "", y = per, fill=cut)) +
geom_col() +
ggtitle(" ") +
coord_polar("y", start=0) +
scale_y_continuous(labels = scales::percent)
#Stacked Bar
ggplot(data=df,aes(x="",y=per,fill=cut)) +
geom_bar(stat="identity")
#Stacked Bar
ggplot(data=df,aes(x="",y=per,fill=cut)) +
geom_bar(stat="identity") +
scale_y_continuous(labels = scales::percent)
#Pie
ggplot(df, aes(x= "", y = per, fill=cut)) +
geom_cbar() +
ggtitle(" ") +
coord_polar("y", start=0) +
scale_y_continuous(labels = scales::percent)
#Pie
ggplot(df, aes(x= "", y = per, fill=cut)) +
geom_bar() +
ggtitle(" ") +
coord_polar("y", start=0) +
scale_y_continuous(labels = scales::percent)
#Pie
ggplot(df, aes(x= "", y = per, fill=cut)) +
geom_col() +
ggtitle(" ") +
coord_polar("y", start=0) +
scale_y_continuous(labels = scales::percent)
#Side-by-Side Bar
ggplot(data=diamonds,aes(x=cut,fill=cut)) +
scale_fill_viridis() +
geom_bar()
library(viridis)
#Side-by-Side Bar
ggplot(data=diamonds,aes(x=cut,fill=cut)) +
scale_fill_viridis() +
geom_bar()
#Side-by-Side Bar
ggplot(data=diamonds,aes(x=cut,fill=cut)) +
scale_color_viridis() +
geom_bar()
#Side-by-Side Bar
ggplot(data=diamonds,aes(x=cut,fill=cut)) +
scale_fill_viridis() +
geom_bar()
#Side-by-Side Bar
ggplot(data=diamonds,aes(x=cut,fill=cut)) +
scale_fill_viridis_d() +
geom_bar()
#Pie
ggplot(df, aes(x= "", y = per, fill=cut)) +
scale_fill_viridis_d() +
geom_col() +
ggtitle(" ") +
coord_polar("y", start=0) +
scale_y_continuous(labels = scales::percent)
#Stacked Bar
ggplot(data=df,aes(x="",y=per,fill=cut)) +
scale_fill_viridis_d() +
geom_bar(stat="identity") +
scale_y_continuous(labels = scales::percent)
#Stacked Bar
ggplot(data=df,aes(x="",y=per,fill=cut)) +
scale_fill_viridis_d() +
geom_bar(stat="identity") +
xlab(label="")
#Stacked Bar
ggplot(data=df,aes(x="",y=per,fill=cut)) +
scale_fill_viridis_d() +
geom_bar(stat="identity") +
xlab(label="") +
ylab(lable="Percent")
#Stacked Bar
ggplot(data=df,aes(x="",y=per,fill=cut)) +
scale_fill_viridis_d() +
geom_bar(stat="identity") +
xlab(label="") +
ylab(label="Percent")
#Pie
ggplot(df, aes(x= "", y = per, fill=cut)) +
scale_fill_viridis_d() +
geom_col() +
ggtitle("Proportion of Diamonds by Cut") +
coord_polar("y", start=0) +
scale_y_continuous(labels = scales::percent)
#Stacked Bar
ggplot(data=df,aes(x="",y=per,fill=cut)) +
scale_fill_viridis_d() +
geom_bar(stat="identity") +
xlab(label="") +
ylab(label="Percent") +
ggtitle("Proportion of Diamonds by Cut") +
scale_y_continuous(labels = scales::percent)
#Side-by-Side Bar
ggplot(data=diamonds,aes(x=cut,fill=cut)) +
scale_fill_viridis_d() +
ggtitle("Proportion of Diamonds by Cut") +
geom_bar()
#Side-by-Side Bar
ggplot(data=diamonds,aes(x=cut,fill=cut)) +
scale_fill_viridis_d() +
ggtitle("Proportion of Diamonds by Cut") +
geom_bar() +
scale_y_continuous(labels = scales::percent)
#Side-by-Side Bar
ggplot(data=diamonds,aes(x=cut,fill=cut)) +
scale_fill_viridis_d() +
ggtitle("Proportion of Diamonds by Cut") +
geom_bar()
#Side-by-Side Bar
ggplot(data=diamonds,aes(x=cut,fill=cut)) +
scale_fill_viridis_d() +
ggtitle("Proportion of Diamonds by Cut") +
ylab(label="Number of Diamonds") +
geom_bar()
#Pie
ggplot(df, aes(x= "", y = per, fill=cut)) +
scale_fill_viridis_d() +
geom_col() +
ggtitle("Proportion of Diamonds by Cut") +
coord_polar("y", start=0) +
xlab(label="")
#Pie
ggplot(df, aes(x= "", y = per, fill=cut)) +
scale_fill_viridis_d() +
geom_col() +
ggtitle("Proportion of Diamonds by Cut") +
coord_polar("y", start=0) +
xlab(label="") +
ylab("")
#Side-by-Side Bar
ggplot(data=diamonds,aes(x=cut,fill=cut)) +
geom_bar()
ggtitle("Proportion of Diamonds by Cut") +
ylab(label="Number of Diamonds") +
scale_fill_viridis_d()
#Side-by-Side Bar
ggplot(data=diamonds,aes(x=cut,fill=cut)) +
geom_bar()
library(ggplot2)
#install.packages("dplyer")
library(dplyr)
library(viridis)
diamonds <- read.csv(file = 'diamonds.csv')
diamonds$cut <- factor(diamonds$cut,levels=c("Fair","Good","Very Good","Premium","Ideal"))
diamonds$clarity <- factor(diamonds$clarity,levels=c("I1", "SI2", "SI1", "VS2", "VS1", "VVS2", "VVS1", "IF"))
cut_group <- diamonds %>% group_by(cut) %>%
summarise(count = n()) %>%
mutate(per=count/sum(count)) %>%
ungroup()
#Side-by-Side Bar
ggplot(data=diamonds,aes(x=cut,fill=cut)) +
geom_bar()
ggtitle("Proportion of Diamonds by Cut") +
ylab(label="Number of Diamonds") +
scale_fill_viridis_d()
#Side-by-Side Bar
ggplot(data=diamonds,aes(x=cut,fill=cut)) +
geom_bar() +
ggtitle("Proportion of Diamonds by Cut") +
ylab(label="Number of Diamonds") +
scale_fill_viridis_d()
#Stacked Bar
ggplot(data=cut_group,aes(x="",y=per,fill=cut)) +
geom_bar(stat="identity") +
xlab("") +
ylab("Percent") +
ggtitle("Proportion of Diamonds by Cut") +
scale_y_continuous(labels = scales::percent) +
scale_fill_viridis_d()
#Pie
ggplot(cut_group, aes(x= "", y = per, fill=cut)) +
geom_col() +
coord_polar("y", start=0) +
ggtitle("Proportion of Diamonds by Cut") +
xlab("") +
ylab("") +
scale_y_continuous(labels = scales::percent) +
scale_fill_viridis_d()
library(ggplot2)
#install.packages("dplyer")
library(dplyr)
library(viridis)
diamonds <- read.csv(file = 'diamonds.csv')
diamonds %>% rename(Cut=cut)
diamonds <- diamonds %>% rename(Cut=cut)
diamonds$cut <- factor(diamonds$cut,levels=c("Fair","Good","Very Good","Premium","Ideal"))
diamonds <- diamonds %>% rename(Cut=cut, Clarity=clarity)
library(ggplot2)
#install.packages("dplyer")
library(dplyr)
library(viridis)
diamonds <- read.csv(file = 'diamonds.csv')
diamonds <- diamonds %>% rename(Cut=cut, Clarity=clarity)
diamonds$Cut <- factor(diamonds$Cut,levels=c("Fair","Good","Very Good","Premium","Ideal"))
diamonds$Clarity <- factor(diamonds$Clarity,levels=c("I1", "SI2", "SI1", "VS2", "VS1", "VVS2", "VVS1", "IF"))
cut_group <- diamonds %>% group_by(Cut) %>%
summarise(count = n()) %>%
mutate(per=count/sum(count)) %>%
ungroup()
#Side-by-Side Bar
ggplot(data=diamonds,aes(x=cut,fill=cut)) +
geom_bar() +
ggtitle("Proportion of Diamonds by Cut") +
ylab(label="Number of Diamonds") +
scale_fill_viridis_d()
#Side-by-Side Bar
ggplot(data=diamonds,aes(x=Cut,fill=Cut)) +
geom_bar() +
ggtitle("Proportion of Diamonds by Cut") +
ylab(label="Number of Diamonds") +
scale_fill_viridis_d()
#Stacked Bar
ggplot(data=cut_group,aes(x="",y=per,fill=Cut)) +
geom_bar(stat="identity") +
xlab("") +
ylab("Percent") +
ggtitle("Proportion of Diamonds by Cut") +
scale_y_continuous(labels = scales::percent) +
scale_fill_viridis_d()
#Pie
ggplot(cut_group, aes(x= "", y = per, fill=Cut)) +
geom_col() +
coord_polar("y", start=0) +
ggtitle("Proportion of Diamonds by Cut") +
xlab("") +
ylab("") +
scale_y_continuous(labels = scales::percent) +
scale_fill_viridis_d()
