ggtitle("Sepal Length-Width")
iris_plot + geom_point(aes(color = is_versicolor, shape = is_versicolor,size=is_versicolor)) +
xlab("Sepal Length") +  ylab("Sepal Width") +
ggtitle("Sepal Length-Width")
iris_plot + geom_point(aes(color=is_versicolor, shape=is_versicolor, size=is_versicolor)) +
xlab("Sepal Length") +  ylab("Sepal Width") + guide_legend(title="Versicolor")
iris_plot + geom_point(aes(color=is_versicolor, shape=is_versicolor, size=is_versicolor)) +
xlab("Sepal Length") +  ylab("Sepal Width") + guide_legend(title="Versicolor") +
ggtitle("Sepal Length-Width")
iris_plot + geom_point(aes(color=is_versicolor, shape=is_versicolor, size=c(.5,2))) +
xlab("Sepal Length") +  ylab("Sepal Width") + guide_legend(title="Versicolor") +
ggtitle("Sepal Length-Width")
Is_Versicolor <- iris$Species == "versicolor"
Is_Versicolor <- iris$Species == "versicolor"
iris_plot <- ggplot(iris,aes(x=Sepal.Width,y=Sepal.Length))
iris_plot + geom_point(aes(colour=Is_Versicolor,shape=Is_Versicolor))
iris_plot + geom_point(aes(color=Is_Versicolor, shape=Is_Versicolor, size=c(.5,2))) +
xlab("Sepal Length") +  ylab("Sepal Width") +
ggtitle("Sepal Length-Width")
iris_plot + geom_point(aes(color=Is_Versicolor, shape=Is_Versicolor)) +
xlab("Sepal Length") +  ylab("Sepal Width") +
ggtitle("Sepal Length-Width")
iris_plot + geom_point(aes(color=c(hsv(.1,.1,1),hsv(1,1,1)), shape=Is_Versicolor)) +
xlab("Sepal Length") +  ylab("Sepal Width") +
ggtitle("Sepal Length-Width")
Is_Versicolor
iris_plot + geom_point(aes(color=Is_Versicolor, shape=Is_Versicolor)) +
xlab("Sepal Length") +  ylab("Sepal Width") +
ggtitle("Sepal Length-Width")
iris_plot + geom_point(aes(color=Is_Versicolor,shape=Is_Versicolor))
iris_plot + geom_point(aes(color=Is_Versicolor, shape=Is_Versicolor)) +
xlab("Sepal Length") +  ylab("Sepal Width") +
ggtitle("Sepal Length-Width") + scale_color_hue(l=40, c=35)
iris_plot + geom_point(aes(color=Is_Versicolor, shape=Is_Versicolor)) +
xlab("Sepal Length") +  ylab("Sepal Width") +
ggtitle("Sepal Length-Width") + scale_color_hue(l=20, c=35)
iris_plot + geom_point(aes(color=Is_Versicolor, shape=Is_Versicolor)) +
xlab("Sepal Length") +  ylab("Sepal Width") +
ggtitle("Sepal Length-Width") + scale_color_hue(l=80, c=35)
iris_plot + geom_point(aes(color=Is_Versicolor, shape=Is_Versicolor)) +
xlab("Sepal Length") +  ylab("Sepal Width") +
ggtitle("Sepal Length-Width") + scale_color_hue(l=80, c=20)
iris_plot + geom_point(aes(color=Is_Versicolor, shape=Is_Versicolor)) +
xlab("Sepal Length") +  ylab("Sepal Width") +
ggtitle("Sepal Length-Width") + scale_color_hue(l=80, c=20) +
scale_color_brewer(palette="Dark2")
+ scale_color_hue(l=80, c=20) +
iris_plot + geom_point(aes(color=Is_Versicolor, shape=Is_Versicolor)) +
xlab("Sepal Length") +  ylab("Sepal Width") +
ggtitle("Sepal Length-Width") +
scale_color_manual(breaks = c(FALSE, TRUE), values=c("red", "blue"))
iris_plot + geom_point(aes(color=Is_Versicolor, shape=Is_Versicolor)) +
xlab("Sepal Length") +  ylab("Sepal Width") +
ggtitle("Sepal Length-Width") +
scale_color_manual(breaks = c(FALSE, TRUE), values=c("red", "blue"))
iris_plot + geom_point(aes(color=Is_Versicolor, shape=Is_Versicolor)) +
xlab("Sepal Length") +  ylab("Sepal Width") +
ggtitle("Sepal Length-Width") +
scale_color_manual(breaks = c(FALSE, TRUE), values=c(hsv(1,1,1), hsv(.5,.5,1)))
iris_plot + geom_point(aes(color=Is_Versicolor, shape=Is_Versicolor)) +
xlab("Sepal Length") +  ylab("Sepal Width") +
ggtitle("Sepal Length-Width") +
scale_color_manual(breaks = c(FALSE, TRUE), values=c(hsv(1,1,1), hsv(.5,.5,.5)))
1
iris_plot + geom_point(aes(color=Is_Versicolor, shape=Is_Versicolor)) +
xlab("Sepal Length") +  ylab("Sepal Width") +
ggtitle("Sepal Length-Width") +
scale_color_manual(breaks = c(FALSE, TRUE), values=c(hsv(1,1,1), hsv(.5,.5,1)))
iris_plot + geom_point(aes(color=Is_Versicolor, shape=Is_Versicolor)) +
xlab("Sepal Length") +  ylab("Sepal Width") +
ggtitle("Sepal Length-Width") +
scale_color_manual(breaks = c(FALSE, TRUE), values=c(hsv(1,1,.5), hsv(.5,.5,1)))
iris_plot + geom_point(aes(color=Is_Versicolor, shape=Is_Versicolor)) +
xlab("Sepal Length") +  ylab("Sepal Width") +
ggtitle("Sepal Length-Width") +
scale_color_manual(breaks = c(FALSE, TRUE), values=c(hsv(1,1,.5), hsv(0,.5,1)))
iris_plot + geom_point(aes(color=Is_Versicolor, shape=Is_Versicolor)) +
xlab("Sepal Length") +  ylab("Sepal Width") +
ggtitle("Sepal Length-Width") +
scale_color_manual(breaks = c(FALSE, TRUE), values=c(hsv(1,1,.5), hsv(1,.5,1)))
iris_plot + geom_point(aes(color=Is_Versicolor, shape=Is_Versicolor)) +
xlab("Sepal Length") +  ylab("Sepal Width") +
ggtitle("Sepal Length-Width") +
scale_color_manual(breaks = c(FALSE, TRUE), values=c(hsv(1,1,.5), hsv(1,.5,1)))
iris_plot + geom_point(aes(color=Is_Versicolor, shape=Is_Versicolor)) +
xlab("Sepal Length") +  ylab("Sepal Width") +
ggtitle("Sepal Length-Width") +
scale_color_manual(breaks = c(FALSE, TRUE), values=c(hsv(1,1,.5), hsv(.25,.5,1)))
iris_plot + geom_point(aes(color=Is_Versicolor, shape=Is_Versicolor)) +
xlab("Sepal Length") +  ylab("Sepal Width") +
ggtitle("Sepal Length-Width") +
scale_color_manual(breaks = c(FALSE, TRUE), values=c(hsv(1,1,.5), hsv(1,1,1)))
iris_plot + geom_point(aes(color=Is_Versicolor, shape=Is_Versicolor)) +
xlab("Sepal Length") +  ylab("Sepal Width") +
ggtitle("Sepal Length-Width") +
scale_color_manual(breaks = c(FALSE, TRUE), values=c(hsv(.5,1,.5), hsv(.5,1,1)))
iris_plot + geom_point(aes(color=Is_Versicolor, shape=Is_Versicolor)) +
xlab("Sepal Length") +  ylab("Sepal Width") +
ggtitle("Sepal Length-Width") +
scale_color_manual(breaks = c(FALSE, TRUE), values=c(hsv(.5,1,.5), hsv(.5,1,.75)))
iris_plot + geom_point(aes(color=Is_Versicolor, shape=Is_Versicolor)) +
xlab("Sepal Length") +  ylab("Sepal Width") +
ggtitle("Sepal Length-Width") +
scale_color_manual(breaks = c(FALSE, TRUE), values=c(hsv(.5,1,.25), hsv(.5,1,.75)))
iris_plot + geom_point(aes(shape=Is_Versicolor))
iris_plot + geom_point() +
scale_color_manual(breaks = c(FALSE, TRUE), values=c(hsv(.5,1,.25), hsv(.5,1,.75)))
iris_plot + geom_point(aes(color=Is_Versicolor)) +
scale_color_manual(breaks = c(FALSE, TRUE), values=c(hsv(.5,1,.25), hsv(.5,1,.75)))
remotes::install_github("coolbutuseless/ggecho")
library(ggecho)
iris_plot + geom_point() + stat_echo(data=iris[!Is_Versicolor])
Is_Versicolor <- iris$Species == "versicolor"
iris_plot <- ggplot(iris,aes(x=Sepal.Width,y=Sepal.Length))
iris_plot + geom_point() + stat_echo(data=iris[!Is_Versicolor])
iris_plot + geom_point() + stat_echo()
iris_plot + geom_point() + stat_echo(data=iris[Is_Versicolor])
ggplot(data=iris[Is_Versicolor],aes(x=Sepal.Width,y=Sepal.Length)) + geom_point() + stat_echo()
iris[Is_Versicolor]
iris_plot + geom_point() + stat_echo(data=iris[Is_Versicolor, ])
iris_plot + geom_point() + stat_echo(data=iris[!Is_Versicolor, ])
iris_plot <- ggplot(iris,aes(x=Sepal.Width,y=Sepal.Length),size=2)
iris_plot + geom_point() + stat_echo(data=iris[!Is_Versicolor, ])
iris_plot + geom_point() + stat_echo(data=iris[!Is_Versicolor, ],size=2)
iris_plot + geom_point() + stat_echo(data=iris[!Is_Versicolor, ],size=1)
iris_plot + geom_point() + stat_echo(data=iris[!Is_Versicolor, ],size=.5)
iris_plot + geom_point() + stat_echo(data=iris[!Is_Versicolor, ],size=.01)
iris_plot <- ggplot(iris,aes(x=Sepal.Width,y=Sepal.Length),size=5)
iris_plot + geom_point() + stat_echo(data=iris[!Is_Versicolor, ],size=.01)
iris_plot + geom_point() + stat_echo(data=iris[!Is_Versicolor, ],size=.001)
iris_plot + geom_point() + stat_echo(data=iris[!Is_Versicolor, ],size=.01)
iris_plot + geom_point() + stat_echo(data=iris[!Is_Versicolor, ],size=.1)
iris_plot <- ggplot(iris,aes(x=Sepal.Width,y=Sepal.Length))
iris_plot + geom_point(size=2) + stat_echo(data=iris[!Is_Versicolor, ],size=.1)
iris_plot + geom_point(aes(size=2)) + stat_echo(data=iris[!Is_Versicolor, ],size=.1)
iris_plot + geom_point() + stat_echo(data=iris[!Is_Versicolor, ],size=.1)
p <- ggplot(iris[Is_Versicolor, ],aes(x=Sepal.Width,y=Sepal.Length),size=5)
p
p <- ggplot(iris[Is_Versicolor, ],aes(x=Sepal.Width,y=Sepal.Length),size=1)
p
p <- ggplot(iris[Is_Versicolor, ],aes(x=Sepal.Width,y=Sepal.Length),size=1) + geom_point
p <- ggplot(iris[Is_Versicolor, ],aes(x=Sepal.Width,y=Sepal.Length),size=1) + geom_point()
p
p <- ggplot(iris[Is_Versicolor, ],aes(x=Sepal.Width,y=Sepal.Length),size=2) + geom_point()
p
p <- ggplot(iris[Is_Versicolor, ],aes(x=Sepal.Width,y=Sepal.Length),size=4) + geom_point()
p
p <- ggplot(iris[Is_Versicolor, ],aes(x=Sepal.Width,y=Sepal.Length)) + geom_point(size=2)
p
p + geom_point() + stat_echo(data=iris[!Is_Versicolor, ],size=.1)
p <- ggplot(iris[Is_Versicolor, ],aes(x=Sepal.Width,y=Sepal.Length)) + geom_point(size=4)
p
p + geom_point() + stat_echo(data=iris[!Is_Versicolor, ],size=.1)
p <- ggplot(iris[Is_Versicolor, ],aes(x=Sepal.Width,y=Sepal.Length)) + geom_point(size=3)
p + geom_point() + stat_echo(data=iris[!Is_Versicolor, ],size=.1)
p <- ggplot(iris[Is_Versicolor, ],aes(x=Sepal.Width,y=Sepal.Length)) + geom_point(size=2)
p + geom_point() + stat_echo(data=iris[!Is_Versicolor, ],size=.1)
p <- ggplot(iris[Is_Versicolor, ],aes(x=Sepal.Width,y=Sepal.Length)) + geom_point(size=2.5)
p + geom_point() + stat_echo(data=iris[!Is_Versicolor, ],size=.1)
library(ggplot2)
Is_Versicolor <- iris$Species == "versicolor"
iris_plot <- ggplot(iris,aes(x=Sepal.Width,y=Sepal.Length))
iris_plot + geom_point(aes(shape=Is_Versicolor))
iris_plot + geom_point(aes(color=Is_Versicolor)) +
scale_color_manual(breaks = c(FALSE, TRUE), values=c(hsv(.5,1,.25), hsv(.5,1,.75)))
#remotes::install_github("coolbutuseless/ggecho")
library(ggecho)
blur <- ggplot(iris[Is_Versicolor, ],aes(x=Sepal.Width,y=Sepal.Length)) + geom_point(size=2.5)
blur + geom_point() + stat_echo(data=iris[!Is_Versicolor, ],size=.1)
#PART 2
iris_plot + geom_point(aes(color=Species))
#PART 2
iris_plot + geom_point(aes(color=Species)) +
scale_color_manual(breaks = c("setosa", "versicolor", "virginica"), values=c(hsv(.25,1,.25), hsv(.5,1,.5), hsv(.75,1,.75)))
#PART 2
iris_plot + geom_point(aes(color=Species)) +
scale_color_manual(breaks = c("setosa", "versicolor", "virginica"), values=c(hsv(.15,1,.15), hsv(.5,1,.5), hsv(.85,1,.85)))
#PART 2
iris_plot + geom_point(aes(color=Species,size=Species)) +
scale_color_manual(breaks = c("setosa", "versicolor", "virginica"), values=c(hsv(.15,1,.15), hsv(.5,1,.5), hsv(.85,1,.85)))
iris_plot + geom_point(aes(color=Species,shape=Species)) +
scale_color_manual(breaks = c("setosa", "versicolor", "virginica"), values=c(hsv(.15,1,.15), hsv(.5,1,.5), hsv(.85,1,.85)))
iris_plot + geom_point(aes(color=Species,shape=Species)) +
scale_color_manual(breaks = c("setosa", "versicolor", "virginica"), values=c(hsv(.5,1,.15), hsv(.5,1,.5), hsv(.5,1,.85)))
library(ggplot2)
library(reshape2)
library(dplyr)  # required for arrange()
library(colorspace)
library(viridis)
library(maps) # for the state map data
library(mapproj)
murder_rates <- read.csv(file = 'MurderRate.csv')
murder_rates$state <- tolower(murder_rates$state)
states_map<-map_data("state") #extracts data from the states map
crimes<-data.frame(state=tolower(rownames(USArrests)),USArrests)
crimes<-merge(crimes,murder_rates,by="state")
crime_map<-merge(states_map,crimes,by.x="region",by.y="state")
crime_map<-arrange(crime_map,group,order)
c = hsv((max(crime_map$Murder)-crime_map$Murder)/(max(crime_map$Murder)-min(crime_map$Murder))/7,(crime_map$Murder-min(crime_map$Murder))/(max(crime_map$Murder)-min(crime_map$Murder)),1)
c2 = hsv(1/7,1,1)
c3 = hsv(0,0,1)
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(fill=c)
#scale_fill_gradientn(colours=c)
min(C)
min(c)
scale_fill_gradient(low=min(c),high=max(c))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(fill=c) +
scale_fill_gradient(low=min(c),high=max(c))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
#geom_polygon(fill=c) +
scale_fill_gradient(low=min(c),high=max(c))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
#geom_polygon(fill=c) +
scale_fill_gradient(low=min(c),high=max(c))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
scale_fill_gradient(low=min(c),high=max(c))
ggplot(crime_map,aes(x=long,y=lat,group=group,fill=c)) +
coord_map("polyconic") +
#geom_polygon(fill=c) +
scale_fill_gradient(low=min(c),high=max(c))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(fill=c) +
scale_fill_gradient(low=min(c),high=max(c))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(fill=c) +
scale_fill_manual(values=c)
ggplot(crime_map,aes(x=long,y=lat,group=group,fill=c)) +
coord_map("polyconic") +
geom_polygon(fill=c) +
scale_fill_manual(values=c)
ggplot(c)+scale_fill_gradient(low=min(c),high=max(c))
ggplot(crime_map)+scale_fill_gradient(low=min(c),high=max(c))
ggplot(crime_map,aes(x=long,y=lat,group=group))+scale_fill_gradient(low=min(c),high=max(c))
ggplot(crime_map,aes(x=long,y=lat,group=group))+coord_map("polyconic")+scale_fill_gradient(low=min(c),high=max(c))
ggplot(crime_map,aes(x=long,y=lat,group=group,fill=c))+coord_map("polyconic")+scale_fill_gradient(low=min(c),high=max(c))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(fill=c)
scale_color_gradient(low=min(c),high=max(c))
scale_color_gradient(low=min(c),high=max(c))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(fill=c) +scale_color_gradient(low=min(c),high=max(c))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=c))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=c)) + scale_color_gradient(low=min(c),high=max(c))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(fill=c) + scale_color_gradient(low=min(c),high=max(c))
scale_color_gradient(low=min(c),high=max(c))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=c)) +
scale_fill_gra(colors=c)
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=c)) +
scale_fill_gradientn(colors=c)
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(Murder)) +
scale_fill_gradientn(colors=c)
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(crime_map$Murder)) +
scale_fill_gradientn(colors=c)
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=Murder)) +
scale_fill_gradientn(colors=c)
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=Murder)) +
scale_fill_gradient(colors=c)
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=Murder)) +
scale_fill_gradient(colors=c)
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=Murder)) +
scale_fill_gradient(low=min(c),high=max(c))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=Murder)) +
scale_fill_gradient(low=max(c),high=min(c))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=Murder)) +
#scale_fill_gradient(low=max(c),high=min(c))
scale_color_gradient(low=min(c),high=max(c))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=Murder)) +
scale_fill_gradient(low=max(c),high=min(c))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(fill=c)
c = hsv((max(crime_map$Murder)-crime_map$Murder)/(max(crime_map$Murder)-min(crime_map$Murder))/7,(crime_map$Murder-min(crime_map$Murder))/(max(crime_map$Murder)-min(crime_map$Murder)),.75)
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(fill=c)
c = hsv((max(crime_map$Murder)-crime_map$Murder)/(max(crime_map$Murder)-min(crime_map$Murder))/7,(crime_map$Murder-min(crime_map$Murder))/(max(crime_map$Murder)-min(crime_map$Murder)),.95)
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(fill=c)
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=Murder)) +
scale_fill_gradient(low=max(c),high=min(c))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=Murder)) +
scale_color_gradient(low=max(c),high=min(c))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=Murder)) +
scale_fill_gradient(low=max(c),high=min(c))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=Murder)) +
#scale_fill_gradient(low=max(c),high=min(c)) +
scale_fill_gradientn(colours=c)
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=Murder)) +
#scale_fill_gradient(low=max(c),high=min(c))
scale_fill_gradientn(colours=1-c)
#scale_fill_gradient(low=max(c),high=min(c))
scale_fill_gradientn(colours=#FFFFFF-c)
coord_map("polyconic") +
we
wer
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=Murder)) +
#scale_fill_gradient(low=max(c),high=min(c))
scale_fill_gradientn(colours=FFFFFF-c)
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=Murder)) +
#scale_fill_gradient(low=max(c),high=min(c))
scale_fill_gradientn(colours=FFFFFF-c)
c
#scale_fill_gradient(low=max(c),high=min(c))
scale_fill_gradientn(colours=max(c_-c)
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=Murder)) +
#scale_fill_gradient(low=max(c),high=min(c))
scale_fill_gradientn(colours=max(c)-c)
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=Murder)) +
#scale_fill_gradient(low=max(c),high=min(c))
scale_fill_gradientn(colours=max(c)-c)
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=Murder)) +
scale_fill_gradient(low=max(c),high=min(c))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(fill=c)
library(ggplot2)
library(reshape2)
library(dplyr)  # required for arrange()
library(colorspace)
library(viridis)
library(maps) # for the state map data
library(mapproj)
murder_rates <- read.csv(file = 'MurderRate.csv')
murder_rates$state <- tolower(murder_rates$state)
states_map<-map_data("state") #extracts data from the states map
crimes<-data.frame(state=tolower(rownames(USArrests)),USArrests)
crimes<-merge(crimes,murder_rates,by="state")
crime_map<-merge(states_map,crimes,by.x="region",by.y="state")
crime_map<-arrange(crime_map,group,order)
c = hsv((max(crime_map$Murder)-crime_map$Murder)/(max(crime_map$Murder)-min(crime_map$Murder))/7,(crime_map$Murder-min(crime_map$Murder))/(max(crime_map$Murder)-min(crime_map$Murder)),.95)
# ggplot(crime_map,aes(x=long,y=lat,group=group)) +
#   coord_map("polyconic") +
#   geom_polygon(aes(fill=Murder)) +
#   scale_fill_gradient(low=max(c),high=min(c))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(fill=c)
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(fill=c,show.legend = TRUE)
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(fill=c,aes(show.legend = TRUE))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(fill=c,show.legend = TRUE)
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=Murder)) +
scale_fill_gradient(low=max(c),high=min(c))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(fill=c,show.legend = TRUE)
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=Murder)) +
scale_fill_gradientn(colors = c(max(c),(max(c)+min(c))/2,min)c)
scale_fill_gradientn(colors = c(max(c),(max(c)+min(c))/2,min(c))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=Murder)) +
scale_fill_gradientn(colors = c(max(c),(max(c)+min(c))/2,min(c)))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=Murder)) +
scale_fill_gradientn(colors = c(max(c),(max(c)+min(c))/2,min(c)))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=Murder)) +
scale_fill_gradientn(colors = c(max(c),hsv(1/14,.5,.95),min(c)))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(fill=c,show.legend = TRUE)
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=Murder)) +
scale_fill_gradientn(colors = c(max(c),hsv(1/14,.5,.95),min(c)))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(fill=c) +
scale_fill_gradientn(colors = c(max(c),hsv(1/14,.5,.95),min(c)))
ggplot(crime_map,aes(x=long,y=lat,group=group,fill=Murder)) +
coord_map("polyconic") +
geom_polygon(fill=c) +
scale_fill_gradientn(colors = c(max(c),hsv(1/14,.5,.95),min(c)))
ggplot(crime_map,aes(x=long,y=lat,group=group,fill=Murder)) +
coord_map("polyconic") +
geom_polygon(fill=c,aes(fill=Murder)) +
scale_fill_gradientn(colors = c(max(c),hsv(1/14,.5,.95),min(c)))
ggplot(crime_map,aes(x=long,y=lat,group=group,fill=Murder)) +
coord_map("polyconic") +
geom_polygon() +
scale_fill_gradientn(colors = c(max(c),hsv(1/14,.5,.95),min(c)))
source('~/Documents/CS_Courses/CS_710/Color/USArrests.R', echo=TRUE)
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(fill=c)
#Hue determined by Murder Arrest Rate and Brightness determined by Murder Rate
ggplot(crime_map) +
coord_map("polyconic") +
geom_polygon(aes(x=long, y=lat, group=group, fill=rate)) +
geom_polygon(aes(x=long, y=lat, group=group, alpha=Murder))
library(ggplot2)
library(reshape2)
library(dplyr)  # required for arrange()
library(colorspace)
library(viridis)
library(maps) # for the state map data
library(mapproj)
murder_rates <- read.csv(file = 'MurderRate.csv')
murder_rates$state <- tolower(murder_rates$state)
states_map<-map_data("state") #extracts data from the states map
crimes<-data.frame(state=tolower(rownames(USArrests)),USArrests)
crimes<-merge(crimes,murder_rates,by="state")
crime_map<-merge(states_map,crimes,by.x="region",by.y="state")
crime_map<-arrange(crime_map,group,order)
c = hsv((max(crime_map$Murder)-crime_map$Murder)/(max(crime_map$Murder)-min(crime_map$Murder))/7,(crime_map$rate-min(crime_map$rate))/(max(crime_map$rate)-min(crime_map$rate)),.95)
#Hue determined by Murder Arrest Rate and Saturation determined by Murder Rate
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(fill=c)
#Hue determined by Murder Arrest Rate and Brightness determined by Murder Rate
ggplot(crime_map) +
coord_map("polyconic") +
geom_polygon(aes(x=long, y=lat, group=group, fill=rate)) +
geom_polygon(aes(x=long, y=lat, group=group, alpha=Murder))
setwd("~/Documents/CS_Courses/CS_710/Color")
library(ggplot2)
library(reshape2)
library(dplyr)  # required for arrange()
library(colorspace)
library(viridis)
library(maps) # for the state map data
library(mapproj)
murder_rates <- read.csv(file = 'MurderRate.csv')
murder_rates$state <- tolower(murder_rates$state)
states_map<-map_data("state") #extracts data from the states map
crimes<-data.frame(state=tolower(rownames(USArrests)),USArrests)
crimes<-merge(crimes,murder_rates,by="state")
crime_map<-merge(states_map,crimes,by.x="region",by.y="state")
crime_map<-arrange(crime_map,group,order)
c = hsv((max(crime_map$Murder)-crime_map$Murder)/(max(crime_map$Murder)-min(crime_map$Murder))/7,(crime_map$rate-min(crime_map$rate))/(max(crime_map$rate)-min(crime_map$rate)),.95)
#Hue determined by Murder Arrest Rate and Saturation determined by Murder Rate
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(fill=c)
#Hue determined by Murder Arrest Rate and Brightness determined by Murder Rate
ggplot(crime_map) +
coord_map("polyconic") +
geom_polygon(aes(x=long, y=lat, group=group, fill=rate)) +
geom_polygon(aes(x=long, y=lat, group=group, alpha=Murder))
