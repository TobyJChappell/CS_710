pt(3.074*3/4,9)-pt(-3.074*3/4,9)
pt(3.074,9)-pt(-3.074,9)
pt(3.074,7)-pt(-3.074,7)
pt(3.074,15)-pt(-3.074,15)
1-pchisq(26,24)
qchisq(.85,16)
pf(5/2,4,5)
1-pf(5/2,4,5)
12/5*qf(.96,9,15)
x<-c(5.3,4.3,7.7,14.7,11.3)
theta_hat <- mean(x)
y<-seq(0,50,.01)
plot(y,dgamma(y,shape=2,scale=theta_hat),type="I")
plot(y,dgamma(y,shape=2,scale=theta_hat),type="1")
plot(y,dgamma(y,shape=2,scale= theta_hat),type=”l”)title("Toby Chappell")
plot(y,dgamma(y,shape=2,scale= theta_hat),type=”l”)
plot(y,dgamma(y,shape=2,scale= theta_hat),type="l")
title("Toby Chappell")
x<-c(5.3,4.3,7.7,14.7,11.3)
theta_hat <- mean(x)
y<-seq(0,50,.01)
plot(y,dgamma(y,shape=2,scale= theta_hat),type="l")
title("Toby Chappell")
theta_hat <- mean(x)/2
y<-seq(0,50,.01)
plot(y,dgamma(y,shape=2,scale= theta_hat),type="l")
title("Toby Chappell")
theta_hat<-mean(x)/2
mean(method_1)
method_1<-c(79,66,57,91,42,59)
method_2<-c(71,43,58,78,20,56)
mean(method_1)
mean(method_2)
var(method_1)
var(method_2)
var(method_1,method_2)
mean(method_1,method_2)
var(method_2)
qnorm(.99,30)
qnorm(.99)
qnorm(.99,0,1.2)
qchisq(.99,29)
qchisq(.99,29,30)
pchisq(.99,29)
pchisq(.99,3-)
pchisq(.99,30)
pnorm(22,20,1025/144)-pnorm(2,20,1025/144)
pnorm(22,20,sqrt(1025/144))-pnorm(2,20,sqrt(1025/144))
qnorm(.985,0,sqrt(265/144))
1-pchisq(44,23)
pchisq(44,23,lower.tail=TRUE)
pchisq(44,23,lower.tail=FALSE)
4/3*qt(.975,8)
1-pchisq(26,24)
1-pf(5/2,4,5)
1-pf(2,4,4)
1-pf(2.5,4,4)
1-pf(2.5,4,4)
x<-c(5.3,4.3,7.7,14.7,11.3)
theta_hat<-mean(x)/2
y<-seq(0,50,.01)
plot(y,dgamma(y,shape=2,scale= theta_hat),type="l")
title("Toby Chappell")
plot(y,dgamma(y,shape=2,scale= theta_hat))
plot(y,dgamma(y,shape=2,scale= theta_hat),type="l")
alpha<-1-.95
#Population mean estimation
m<-mean(data)
data<-c(79,66,57,91,42,59)
#Population mean estimation
m<-mean(data)
s<-var(data)
n<-length(data)
lb<-m-(qt(1-alpha/2,n-1)*s)/sqrt(n)
ub<-m+(qt(1-alpha/2,n-1)*s)/sqrt(n)
c(lb,ub)
#Population variance estimation
s<-var(data)
n<-length(data)
lb<-((n-1)*s)/qchisq(0.975,n-1)
ub<-((n-1)*s)/qchisq(0.025,n-1)
c(lb,ub)
lb<-((n-1)*s)/qchisq(1-alpha/2,n-1)
ub<-((n-1)*s)/qchisq(alpha,n-1)
c(lb,ub)
ub<-((n-1)*s)/qchisq(alpha/2,n-1)
c(lb,ub)
m
s
lb<-m-(qnorm(1-alpha/2)*p_s)/sqrt(n)
p_s <- 300
#Population mean estimation (sigma^2 known)
m<-mean(data)
n<-length(data)
lb<-m-(qnorm(1-alpha/2)*p_s)/sqrt(n)
ub<-m+(qnorm(1-alpha/2)*p_s)/sqrt(n)
c(lb,ub)
#Ratio of population variance estimation
data1<-c(79,66,57,91,42,59)
data2<-c(80,55,70,91,92,87)
s1<-var(data1)
n1<-length(data1)
s2<-var(data2)
n2<-length(data2)
lb<-s1/(s2*qf(1-alpha/2,n1-1,n2-1))
ub<-s1/(s2*qf(alpha/2,n1-1,n2-1))
c(lb,ub)
method1 <- c(79,66,57,91,42,59)
alpha = 1-.99
m1<-mean(method1)
s1<-var(method1)
n1<-length(method1)
lb1<-m1-(qt(1-alpha/2,n-1)*s1)/sqrt(n1)
ub1<-m1+(qt(1-alpha/2,n-1)*s1)/sqrt(n1)
c(lb1,ub1)
method1 <- c(79,66,57,91,42,59)
alpha = 1-.99
m1<-mean(method1)
s1<-var(method1)
n1<-length(method1)
lb1<-m1-(qt(1-alpha/2,n1-1)*s1)/sqrt(n1)
ub1<-m1+(qt(1-alpha/2,n1-1)*s1)/sqrt(n1)
c(lb1,ub1)
theta_hat<-mean(x)/22
# Question 2
x<-c(13.6,18.3,35.7,11.7,32.3,45.9)
theta_hat<-mean(x)/22
y<-seq(0,50,.01)
plot(y,dgamma(y,shape=2,scale= theta_hat),type="l")
title("Toby Chappell")
# b
method2<-c(71,43,58,78,20,56)
s2<-var(method2)
n2<-length(method2)
lb2<-((n2-1)*s2)/qchisq(1-alpha/2,n2-1)
ub2<-((n2-1)*s2)/qchisq(alpha/2,n2-1)
c(lb2,ub2)
# b
method2<-c(71,43,58,78,20,56)
alpha2 = 1-.98
s2<-var(method2)
n2<-length(method2)
lb2<-((n2-1)*s2)/qchisq(1-alpha2/2,n2-1)
ub2<-((n2-1)*s2)/qchisq(alpha2/2,n2-1)
c(lb2,ub2)
# Question 3
# a
method1<-c(79,66,57,91,42,59)
alpha1 = 1-.99 # 99% confidence
m1<-mean(method1) # sample mean
s1<-var(method1) # sample variance
n1<-6
lb1<-m1-(qt(1-alpha1/2,n1-1)*s1)/sqrt(n1) # lower bound of CI
ub1<-m1+(qt(1-alpha1/2,n1-1)*s1)/sqrt(n1) # upper bound of CI
c(lb1,ub1)
n1<-length(method1)
lb1<-m1-(qt(1-alpha1/2,n1-1)*s1)/sqrt(n1) # lower bound of CI
ub1<-m1+(qt(1-alpha1/2,n1-1)*s1)/sqrt(n1) # upper bound of CI
c(lb1,ub1)
c(lb2,ub2)
# b
method2<-c(71,43,58,78,20,56)
alpha2 = 1-.98 # 98% confidence
s2<-var(method2) # sample variance
n2<-length(method2)
lb2<-((n2-1)*s2)/qchisq(1-alpha2/2,n2-1) # lower bound of CI
ub2<-((n2-1)*s2)/qchisq(alpha2/2,n2-1) # upper bound of CI
c(lb2,ub2)
method1<-c(79,66,57,91,42,59)
alpha1 = 1-.99 # 99% confidence
m1<-mean(method1) # sample mean
s1<-var(method1) # sample variance
n1<-length(method1)
lb1<-m1-(qt(1-alpha1/2,n1-1)*sqrt(s1))/sqrt(n1) # lower bound of CI
ub1<-m1+(qt(1-alpha1/2,n1-1)*sqrt(s1))/sqrt(n1) # upper bound of CI
c(lb1,ub1)
x<-c(13.6,18.3,35.7,11.7,32.3,45.9)
theta_hat<-mean(x)/22
y<-seq(0,50,.01)
plot(y,dgamma(y,shape=2,scale= theta_hat),type="l")
title("Toby Chappell")
# Question 1
# a
pnorm(-4,-6,1)-pnorm(-8,-6,1)
# b
qnorm(.995)
# c
pnorm(-8,-12,sqrt(40))-pnorm(-10,-12,sqrt(40))
# d
qnorm(.3,-12,sqrt(40))
# e
1-pt(24,15)
# f
1/8*qt(.975,15)
# g
1-pchisq(1,6)
# h
4*qchisq(.6,6)
# i
1-pf(7/3,6,7)
# j
6/7*qf(.975,6,7)
c(lb1,ub1)
c(lb2,ub2)
pnorm(.05)
qnorm(.05)
qnorm(.025)
qnorm(.0125)
qnorm(.005)
qnorm(.0001)
qnorm(.0075)
qnorm(.0025)
qnorm(.001)
qnorm(.002)
qnorm(.0015)
qnorm(.00175)
qnorm(.0019)
qnorm(.0012)
qnorm(.00125)
qnorm(.0013)
qnorm(.0014)
qnorm(.00135)
qnorm(.001375)
qnorm(.00135)
qnorm(.001355)
qnorm(.001345)
qnorm(.001349)
qnorm(.0013499)
.125*2
.135*2
setwd("~/Documents/CS_Courses/CS_710/Final Project")
library(waffle)
library(magrittr)
library(hrbrthemes)
library(ggplot2)
library(dplyr)
library(tidyr)
library(tidyquant)
# DISNEY
disney <- read.csv(file = 'disney_plus_shows.csv')
View(disney)
disney$date_added <- as.Date(disney$added_at,"%B %d, %Y")
disney$date_released <- as.Date(disney$released_at,"%d %b %Y")
disney <- disney[!is.na(disney$imdb_score),]
ggplot(disney,aes(x=date_released,y=imdb_score,color=imdb_score)) +
geom_point() +
geom_smooth(method = "loess", se = FALSE, color = "red")
disney$date_added <- as.Date(disney$added_at,"%B %d, %Y")
disney <- disney[!is.na(disney$date_added),]
disney$date_released <- as.Date(disney$released_at,"%d %b %Y")
disney <- disney[!is.na(disney$date_released),]
disney$imdb_score <- as.numeric(disney$imdb_rating)
disney <- disney[!is.na(disney$imdb_score),]
ggplot(disney,aes(x=date_released,y=imdb_score,color=imdb_score)) +
geom_point() +
geom_smooth(method = "loess", se = FALSE, color = "red")
# DISNEY
disney <- read.csv(file = 'disney_plus_shows.csv')
disney$date_added <- as.Date(disney$added_at,"%B %d, %Y")
disney <- disney[!is.na(disney$date_added),]
disney$date_released <- as.Date(disney$released_at,"%d %b %Y")
disney <- disney[!is.na(disney$date_released),]
disney$imdb_score <- as.numeric(disney$imdb_rating)
disney <- disney[!is.na(disney$imdb_score),]
ggplot(disney,aes(x=date_released,y=imdb_score,color=imdb_score)) +
geom_point() +
geom_smooth(method = "loess", se = FALSE, color = "red")
ggplot(disney,aes(x=date_added,y=imdb_score,color=imdb_score)) +
geom_point() +
geom_smooth(method = "loess", se = FALSE, color = "red")
separate(data = disney, col = genre, into = c("genre 1", "genre 2", "genre 3"), sep = ",")
df <- separate(data = disney, col = genre, into = c("genre 1", "genre 2", "genre 3"), sep = ",")
View(df)
df <- separate(data = disney, col = genre, into = c("genre 1", "genre 2", "genre 3","genre 4"), sep = ",")
df <- separate(data = disney, col = genre, into = c("genre 1", "genre 2", "genre 3","genre 4","genre 5"), sep = ",")
df <- separate(data = disney, col = genre, into = c("genre 1", "genre 2", "genre 3","genre 4","genre 5","genre 6"), sep = ",")
df <- separate(data = disney, col = genre, into = c("genre 1", "genre 2", "genre 3","genre 4","genre 5","genre 6","genre 7"), sep = ",")
df <- separate(data = disney, col = genre, into = c("genre 1", "genre 2", "genre 3","genre 4","genre 5","genre 6","genre 7","genre 8","genre 9"), sep = ",")
View(df)
df <- separate(data = disney, col = genre, into = c("genre_1", "genre_2", "genre_3"), sep = ",")
ggplot(df,aes(x=date_released,y=imdb_score,color=genre_1)) +
geom_point() +
geom_smooth(method = "loess", se = FALSE, color = "red")
df <- df[!is.na(df$genre_1),]
ggplot(df,aes(x=date_released,y=imdb_score,color=genre_1)) +
geom_point() +
geom_smooth(method = "loess", se = FALSE, color = "red")
df <- df[!(df$genre_1=="N/A"),]
ggplot(df,aes(x=date_released,y=imdb_score,color=genre_1)) +
geom_point() +
geom_smooth(method = "loess", se = FALSE, color = "red")
ggplot(disney,aes(x=imdb_score))+geom_histogram()
ggplot(disney,aes(x=imdb_score))+geom_histogram()
# NETFLIX
netflix <- read.csv(file = 'netflix_titles.csv')
# NETFLIX
netflix <- read.csv(file = 'netflix_titles.csv')
View(netflix)
# BOTH
streaming <- read.csv(file = 'streaming_platforms.csv')
streaming <- streaming%>%mutate(platform=case_when(
Netflix==1 & Disney.==0 ~ "Netflix",
Netflix==0 & Disney.==1 ~ "Disney+",
Netflix==1 & Disney.==1 ~ "Both"
))
# BOTH
streaming <- read.csv(file = 'streaming_platforms.csv')
streaming <- streaming%>%mutate(platform=case_when(
Netflix==1 & Disney.==0 ~ "Netflix",
Netflix==0 & Disney.==1 ~ "Disney+",
Netflix==1 & Disney.==1 ~ "Both"
))
View(streaming)
streaming_d <- streaming[!(streaming$Disney.==1),]
View(streaming_d)
streaming_d <- streaming[streaming$Disney.==1,]
View(streaming_d)
ggplot(streaming_d,aes(x=IMDb))+geom_histogram()
streaming_n <- streaming[streaming$Netflix.==1,]
ggplot(streaming_d,aes(x=IMDb))+geom_histogram(fill="blue")
ggplot(streaming_d,aes(x=IMDb))+geom_histogram(fill="111E4F")
ggplot(streaming_d,aes(x=IMDb))+geom_histogram(fill="#111E4F")
ggplot(streaming_d,aes(x=IMDb))+geom_histogram(color="#111E4F",fill="white")
ggplot(streaming_d,aes(x=IMDb))+geom_histogram(color="#111E4F",fill="#65F0E1")
ggplot(streaming_d,aes(x=IMDb))+geom_histogram(color="#111E4F",fill="#65F0E1")+theme_classic()
ggplot(streaming_d,aes(x=IMDb)) +
geom_histogram(color="#111E4F",fill="white") +
theme_classic()
ggplot(streaming_d,aes(x=IMDb)) +
geom_histogram() +
theme_classic()
ggplot(streaming_d,aes(x=IMDb,fill=platform)) +
geom_histogram() +
theme_classic()
ggplot(streaming,aes(x=IMDb,fill=platform)) +
geom_histogram() +
theme_classic()
streaming <- streaming[!is.na(streaming$platform),]
ggplot(streaming,aes(x=IMDb,fill=platform)) +
geom_histogram() +
theme_classic()
ggplot(streaming,aes(x=IMDb,color=platform)) +
geom_histogram() +
theme_classic()
streaming <- streaming[!streaming$platform=="Both",]
ggplot(streaming,aes(x=IMDb,color=platform)) +
geom_histogram() +
theme_classic()
ggplot(streaming,aes(x=IMDb,color=platform)) +
geom_histogram(alpha=.5,position="identity") +
theme_classic()
ggplot(streaming,aes(x=IMDb,color=platform)) +
geom_histogram(alpha=.5,position="identity") +
theme_classic() +
scale_color_manual(values=c("#111E4F","#AF0C19"))
ggplot(streaming,aes(x=IMDb,color=platform)) +
geom_histogram(fill="white",alpha=.5,position="identity") +
theme_classic() +
scale_color_manual(values=c("#111E4F","#AF0C19"))
ggplot(streaming,aes(x=IMDb,color=platform,fill=platform)) +
geom_histogram(alpha=.5,position="identity") +
theme_classic() +
scale_color_manual(values=c("#111E4F","#AF0C19"))
ggplot(streaming,aes(x=IMDb,color=platform,fill=platform)) +
geom_histogram(alpha=.5,position="identity") +
theme_classic() +
scale_color_manual(values=c("#111E4F","#AF0C19")) +
scale_fill_manual(values=c("#111E4F","#AF0C19"))
mu<-streaming %>% group_by(platform) %>% summarise(mean=mean(IMDb))
View(mu)
mu<-streaming %>% group_by(platform) %>% summarise(m=mean(IMDb))
mu<-streaming %>% group_by(p=platform) %>% summarise(m=mean(IMDb))
mu<-streaming %>% drop_na() %>% group_by(p=platform) %>% summarise(m=mean(IMDb))
streaming <- streaming[!is.na(streaming$IMDb),]
mu<-streaming %>% group_by(p=platform) %>% summarise(m=mean(IMDb))
ggplot(streaming,aes(x=IMDb,color=platform,fill=platform)) +
geom_histogram(alpha=.5,position="identity") +
geom_vline(mu, aes(xintercept=m, color=p), linetype="dashed") +
theme_classic() +
scale_color_manual(values=c("#111E4F","#AF0C19")) +
scale_fill_manual(values=c("#111E4F","#AF0C19"))
ggplot(streaming,aes(x=IMDb,color=platform,fill=platform)) +
geom_histogram(alpha=.5,position="identity") +
geom_vline(data=mu, aes(xintercept=m, color=p), linetype="dashed") +
theme_classic() +
scale_color_manual(values=c("#111E4F","#AF0C19")) +
scale_fill_manual(values=c("#111E4F","#AF0C19"))
ggplot(disney,aes(x=imdb_score)) + geom_histogram()
ggplot(streaming,aes(x=IMDb,color=platform,fill=platform)) +
geom_histogram(alpha=.5,position="identity") +
geom_vline(data=mu, aes(xintercept=m, color=p), linetype="dashed") +
theme_classic() +
scale_color_manual(values=c("#111E4F","#AF0C19")) +
scale_fill_manual(values=c("#111E4F","#AF0C19"))
ggplot(streaming,aes(x=IMDb,color=platform,fill=platform)) +
geom_histogram(alpha=.5,position="identity") +
geom_vline(data=mu, aes(xintercept=m, color=p), linetype="dashed") +
geom_density(alpha=0.6)+
theme_classic() +
scale_color_manual(values=c("#111E4F","#AF0C19")) +
scale_fill_manual(values=c("#111E4F","#AF0C19"))
ggplot(streaming,aes(x=IMDb,color=platform,fill=platform)) +
geom_histogram(alpha=.5,position="identity") +
geom_density(alpha=0.6) +
geom_vline(data=mu, aes(xintercept=m, color=p), linetype="dashed") +
theme_classic() +
scale_color_manual(values=c("#111E4F","#AF0C19")) +
scale_fill_manual(values=c("#111E4F","#AF0C19"))
# BOTH
streaming <- read.csv(file = 'streaming_platforms.csv')
streaming <- streaming%>%mutate(platform=case_when(
Netflix==1 & Disney.==0 ~ "Netflix",
Netflix==0 & Disney.==1 ~ "Disney+",
Netflix==1 & Disney.==1 ~ "Both"
))
streaming <- streaming[!is.na(streaming$platform),]
streaming <- streaming[!streaming$platform=="Both",]
streaming <- streaming[!is.na(streaming$IMDb),]
mu<-streaming %>% group_by(p=platform) %>% summarise(m=mean(IMDb))
ggplot(streaming,aes(x=IMDb,color=platform,fill=platform)) +
geom_histogram(alpha=.5,position="identity") +
geom_density(alpha=0.6) +
geom_vline(data=mu, aes(xintercept=m, color=p), linetype="dashed") +
theme_classic() +
scale_color_manual(values=c("#111E4F","#AF0C19")) +
scale_fill_manual(values=c("#111E4F","#AF0C19"))
ggplot(streaming,aes(x=IMDb,color=platform,fill=platform)) +
#geom_histogram(alpha=.5,position="identity") +
geom_density(alpha=0.6) +
geom_vline(data=mu, aes(xintercept=m, color=p), linetype="dashed") +
theme_classic() +
scale_color_manual(values=c("#111E4F","#AF0C19")) +
scale_fill_manual(values=c("#111E4F","#AF0C19"))
ggplot(streaming,aes(x=IMDb,color=platform,fill=platform)) +
geom_histogram(alpha=.5,position="identity") +
geom_density(alpha=0.6,position="identity") +
geom_vline(data=mu, aes(xintercept=m, color=p), linetype="dashed") +
theme_classic() +
scale_color_manual(values=c("#111E4F","#AF0C19")) +
scale_fill_manual(values=c("#111E4F","#AF0C19"))
ggplot(streaming,aes(x=IMDb,color=platform,fill=platform)) +
#geom_histogram(alpha=.5,position="identity") +
geom_density(alpha=0.6,position="identity") +
geom_vline(data=mu, aes(xintercept=m, color=p), linetype="dashed") +
theme_classic() +
scale_color_manual(values=c("#111E4F","#AF0C19")) +
scale_fill_manual(values=c("#111E4F","#AF0C19"))
ggplot(streaming,aes(x=IMDb,color=platform,fill=platform)) +
#geom_histogram(alpha=.5,position="identity") +
geom_density(alpha=0.5) +
geom_vline(data=mu, aes(xintercept=m, color=p), linetype="dashed") +
theme_classic() +
scale_color_manual(values=c("#111E4F","#AF0C19")) +
scale_fill_manual(values=c("#111E4F","#AF0C19"))
ggplot(streaming,aes(x=IMDb,color=platform,fill=platform)) +
geom_histogram(alpha=.5,position="identity") +
#geom_density(alpha=0.5) +
geom_vline(data=mu, aes(xintercept=m, color=p), linetype="dashed") +
theme_classic() +
scale_color_manual(values=c("#111E4F","#AF0C19")) +
scale_fill_manual(values=c("#111E4F","#AF0C19"))
streaming %>% count(platform) # get counts of streaming platforms
platform <- c('Netflix' = 3550,'Both'=10,'Disney+'=554)
waffle(
platform/2, rows = 17, size =0.125,
colors = c("#AF0C19","#601534","#111E4F"), legend_pos = "bottom"
)
ggplot(df,aes(x=genre_1))+geom_bar()
df <- df[!(df$genre_1=="History"|df$genre_1=="Music"|df$genre_1=="Musical"|df$genre_1=="Reality-TV"|df$genre_1=="Short"),]
ggplot(df,aes(x=genre_1))+geom_bar()
df <- separate(data = disney, col = genre, into = c("genre_1"), sep = ",")
df <- df[!(df$genre_1=="N/A"|df$genre_1=="History"|df$genre_1=="Music"|df$genre_1=="Musical"|df$genre_1=="Reality-TV"|df$genre_1=="Short"),]
ggplot(df,aes(x=date_released,y=imdb_score,color=genre_1)) +
geom_point() +
geom_smooth(method = "loess", se = FALSE, color = "red")
ggplot(df,aes(x=date_released,y=imdb_score,color=genre_1)) +
geom_point() +
geom_smooth(method = "loess", se = FALSE, color = "#111E4F")
ggplot(df,aes(x=date_released,y=imdb_score,color=genre_1)) +
geom_point() +
geom_smooth(method = "loess", se = FALSE, color = "#111E4F") +
theme_classic()
ggplot(df,aes(x=date_released,y=imdb_score,color=genre_1)) +
geom_point() +
geom_smooth(method = "loess", se = FALSE, color = "#111E4F") +
theme_classic() +
scale_fill_brewer()
ggplot(df,aes(x=date_released,y=imdb_score,color=genre_1)) +
geom_point() +
geom_smooth(method = "loess", se = FALSE, color = "#111E4F") +
theme_classic() +
scale_color_brewer()
# Waffle plot
streaming %>%
count(platform) %>%
ggplot(aes(fill=platform,values=n)) +
geom_waffle(rows = 100, size = 0.33, colour = "white", flip = TRUE) +
scale_fill_manual(
name = NULL,
values = c("#AF0C19", "#111E4F", "#601534"),
labels = c("Netflix", "Disney+", "Both")
) +
coord_equal() +
theme_ipsum_rc(grid="") +
theme_enhance_waffle()
ggplot(streaming,aes(x=IMDb,color=platform,fill=platform)) +
geom_histogram(alpha=.5,position="identity") +
#geom_density(alpha=0.5) +
geom_vline(data=mu, aes(xintercept=m, color=p), linetype="dashed") +
theme_classic() +
scale_color_manual(values=c("#111E4F","#AF0C19")) +
scale_fill_manual(values=c("#111E4F","#AF0C19"))
