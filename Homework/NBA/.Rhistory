nba$point_difference = nba$pts-nba$opp_pts
nbaPosPts = nba[nba$point_difference > 0,]
ggplot(nba,aes(x=forecast,y=point_difference,color=as.factor(forecast_cat))) +
geom_point() +
labs(x="Forecast",y="Point Difference",title="Scatter Plot (Point Difference vs. Forecast)") +
theme_minimal()
ggplot(nba,aes(x=forecast,y=point_difference,color=forecast_cat)) +
geom_point() +
labs(x="Forecast",y="Point Difference",title="Scatter Plot (Point Difference vs. Forecast)") +
theme_minimal()
nba$forecast_cat <- factor(lapply(nba$forecast,forecast_to_cat))
nba$forecast_cat <- factor(nba$forecast_cat)
nba$forecast_cat <- lapply(nba$forecast,factor)
library(ggplot2)
nba <- read.csv("nba-elo.csv", header=TRUE)
forecast_to_cat <- function(value) {
if(value <= 0.5) {
return <- "L"
}
else {
return <- "W"
}
}
nba$forecast_cat <- lapply(nba$forecast,forecast_to_cat)
nba$forecast_cat <- lapply(nba$forecast,factor)
game_result_num <- function(value) {
if("W" == value) {
return <- 1
}
else {
return <- 0
}
}
nba$isWin <- lapply(nba$game_result,game_result_num)
nbaWins <- nba[nba$game_result == 'W',]
ggplot(nbaWins, aes(x=game_result, y=forecast, fill=game_result)) +
geom_boxplot() +
theme_classic() +
xlab("Game Result") +
ylab("Elo Forecast") +
theme(legend.position = "none")
ggplot(nbaWins,aes(x=forecast_cat)) +
geom_bar() +
labs(x="Forecast Category",y="Number of Wins",title="Bar Graph (Number of Wins vs. Forecast Category)") +
theme_minimal()
nba$point_difference = nba$pts-nba$opp_pts
nbaPosPts = nba[nba$point_difference > 0,]
ggplot(nba,aes(x=forecast,y=point_difference,color=forecast_cat)) +
geom_point() +
labs(x="Forecast",y="Point Difference",title="Scatter Plot (Point Difference vs. Forecast)") +
theme_minimal()
ggplot(nbaPosPts,aes(x=forecast,y=point_difference,color=forecast_cat)) +
geom_point() +
labs(x="Forecast",y="Point Difference",title="Scatter Plot (Point Difference vs. Forecast)") +
theme_minimal()
nba$forecast_cat <- lapply(nba$forecast,forecast_to_cat)
View(nba)
nba$forecast_cat <- lapply(nba$forecast,factor)
return <- 1
library(ggplot2)
nba <- read.csv("nba-elo.csv", header=TRUE)
forecast_to_cat <- function(value) {
if(value <= 0.5) {
return <- 0
}
else {
return <- 1
}
}
nba$forecast_cat <- lapply(nba$forecast,forecast_to_cat)
nba$forecast_cat <- lapply(nba$forecast,factor)
game_result_num <- function(value) {
if("W" == value) {
return <- 1
}
else {
return <- 0
}
}
nba$isWin <- lapply(nba$game_result,game_result_num)
nbaWins <- nba[nba$game_result == 'W',]
ggplot(nbaWins, aes(x=game_result, y=forecast, fill=game_result)) +
geom_boxplot() +
theme_classic() +
xlab("Game Result") +
ylab("Elo Forecast") +
theme(legend.position = "none")
ggplot(nbaWins,aes(x=forecast_cat)) +
geom_bar() +
labs(x="Forecast Category",y="Number of Wins",title="Bar Graph (Number of Wins vs. Forecast Category)") +
theme_minimal()
nba$point_difference = nba$pts-nba$opp_pts
nbaPosPts = nba[nba$point_difference > 0,]
ggplot(nbaPosPts,aes(x=forecast,y=point_difference,color=forecast_cat)) +
geom_point() +
labs(x="Forecast",y="Point Difference",title="Scatter Plot (Point Difference vs. Forecast)") +
theme_minimal()
library(ggplot2)
nba <- read.csv("nba-elo.csv", header=TRUE)
forecast_to_cat <- function(value) {
if(value <= 0.5) {
return <- 0
}
else {
return <- 1
}
}
nba$forecast_cat <- lapply(nba$forecast,forecast_to_cat)
#nba$forecast_cat <- lapply(nba$forecast,factor)
game_result_num <- function(value) {
if("W" == value) {
return <- 1
}
else {
return <- 0
}
}
nba$isWin <- lapply(nba$game_result,game_result_num)
nbaWins <- nba[nba$game_result == 'W',]
ggplot(nbaWins, aes(x=game_result, y=forecast, fill=game_result)) +
geom_boxplot() +
theme_classic() +
xlab("Game Result") +
ylab("Elo Forecast") +
theme(legend.position = "none")
ggplot(nbaWins,aes(x=forecast_cat)) +
geom_bar() +
labs(x="Forecast Category",y="Number of Wins",title="Bar Graph (Number of Wins vs. Forecast Category)") +
theme_minimal()
nba$point_difference = nba$pts-nba$opp_pts
nbaPosPts = nba[nba$point_difference > 0,]
ggplot(nbaPosPts,aes(x=forecast,y=point_difference,color=forecast_cat)) +
geom_point() +
labs(x="Forecast",y="Point Difference",title="Scatter Plot (Point Difference vs. Forecast)") +
theme_minimal()
ggplot(nba,aes(x=forecast,y=point_difference,color=game_result)) +
geom_point() +
labs(x="Forecast",y="Point Difference",title="Scatter Plot (Point Difference vs. Forecast)") +
theme_minimal()
ggplot(nbaPosPts,aes(x=forecast,y=point_difference,color=forecat_cat)) +
geom_point() +
labs(x="Forecast",y="Point Difference",title="Scatter Plot (Point Difference vs. Forecast)") +
theme_minimal()
library(ggplot2)
nba <- read.csv("nba-elo.csv", header=TRUE)
forecast_to_cat <- function(value) {
if(value <= 0.5) {
return <- .25
}
else {
return <- .75
}
}
nba$forecast_cat <- lapply(nba$forecast,forecast_to_cat)
#nba$forecast_cat <- lapply(nba$forecast,factor)
game_result_num <- function(value) {
if("W" == value) {
return <- 1
}
else {
return <- 0
}
}
nba$isWin <- lapply(nba$game_result,game_result_num)
nbaWins <- nba[nba$game_result == 'W',]
ggplot(nbaWins, aes(x=game_result, y=forecast, fill=game_result)) +
geom_boxplot() +
theme_classic() +
xlab("Game Result") +
ylab("Elo Forecast") +
theme(legend.position = "none")
ggplot(nbaWins,aes(x=forecast_cat)) +
geom_bar() +
labs(x="Forecast Category",y="Number of Wins",title="Bar Graph (Number of Wins vs. Forecast Category)") +
theme_minimal()
nba$point_difference = nba$pts-nba$opp_pts
nbaPosPts = nba[nba$point_difference > 0,]
ggplot(nbaPosPts,aes(x=forecast,y=point_difference,color=forecat_cat)) +
geom_point() +
labs(x="Forecast",y="Point Difference",title="Scatter Plot (Point Difference vs. Forecast)") +
theme_minimal()
library(ggplot2)
nba <- read.csv("nba-elo.csv", header=TRUE)
forecast_to_cat <- function(value) {
if(value <= 0.5) {
return <- .25
}
else {
return <- .75
}
}
nba$forecast_cat <- lapply(nba$forecast,forecast_to_cat)
#nba$forecast_cat <- lapply(nba$forecast,factor)
game_result_num <- function(value) {
if("W" == value) {
return <- 1
}
else {
return <- 0
}
}
nba$isWin <- lapply(nba$game_result,game_result_num)
nbaWins <- nba[nba$game_result == 'W',]
ggplot(nbaWins, aes(x=game_result, y=forecast, fill=game_result)) +
geom_boxplot() +
theme_classic() +
xlab("Game Result") +
ylab("Elo Forecast") +
theme(legend.position = "none")
ggplot(nbaWins,aes(x=forecast_cat)) +
geom_bar() +
labs(x="Forecast Category",y="Number of Wins",title="Bar Graph (Number of Wins vs. Forecast Category)") +
theme_minimal()
nba$point_difference = nba$pts-nba$opp_pts
nbaPosPts = nba[nba$point_difference > 0,]
ggplot(nbaPosPts,aes(x=forecast,y=point_difference,color=forecast_cat)) +
geom_point() +
labs(x="Forecast",y="Point Difference",title="Scatter Plot (Point Difference vs. Forecast)") +
theme_minimal()
library(ggplot2)
nba <- read.csv("nba-elo.csv", header=TRUE)
forecast_to_cat <- function(value) {
if(value <= 0.5) {
return <- 1
}
else {
return <- 2
}
}
nba$forecast_cat <- lapply(nba$forecast,forecast_to_cat)
#nba$forecast_cat <- lapply(nba$forecast,factor)
game_result_num <- function(value) {
if("W" == value) {
return <- 1
}
else {
return <- 0
}
}
nba$isWin <- lapply(nba$game_result,game_result_num)
nbaWins <- nba[nba$game_result == 'W',]
ggplot(nbaWins, aes(x=game_result, y=forecast, fill=game_result)) +
geom_boxplot() +
theme_classic() +
xlab("Game Result") +
ylab("Elo Forecast") +
theme(legend.position = "none")
ggplot(nbaWins,aes(x=forecast_cat)) +
geom_bar() +
labs(x="Forecast Category",y="Number of Wins",title="Bar Graph (Number of Wins vs. Forecast Category)") +
theme_minimal()
nba$point_difference = nba$pts-nba$opp_pts
nbaPosPts = nba[nba$point_difference > 0,]
ggplot(nbaPosPts,aes(x=forecast,y=point_difference,color=forecast_cat)) +
geom_point() +
labs(x="Forecast",y="Point Difference",title="Scatter Plot (Point Difference vs. Forecast)") +
theme_minimal()
library(ggplot2)
nba <- read.csv("nba-elo.csv", header=TRUE)
forecast_to_cat <- function(value) {
if(value <= 0.5) {
return <- 2
}
else {
return <- 3
}
}
nba$forecast_cat <- lapply(nba$forecast,forecast_to_cat)
#nba$forecast_cat <- lapply(nba$forecast,factor)
game_result_num <- function(value) {
if("W" == value) {
return <- 1
}
else {
return <- 0
}
}
nba$isWin <- lapply(nba$game_result,game_result_num)
nbaWins <- nba[nba$game_result == 'W',]
ggplot(nbaWins, aes(x=game_result, y=forecast, fill=game_result)) +
geom_boxplot() +
theme_classic() +
xlab("Game Result") +
ylab("Elo Forecast") +
theme(legend.position = "none")
ggplot(nbaWins,aes(x=forecast_cat)) +
geom_bar() +
labs(x="Forecast Category",y="Number of Wins",title="Bar Graph (Number of Wins vs. Forecast Category)") +
theme_minimal()
nba$point_difference = nba$pts-nba$opp_pts
nbaPosPts = nba[nba$point_difference > 0,]
ggplot(nbaPosPts,aes(x=forecast,y=point_difference,color=forecast_cat)) +
geom_point() +
labs(x="Forecast",y="Point Difference",title="Scatter Plot (Point Difference vs. Forecast)") +
theme_minimal()
library(ggplot2)
nba <- read.csv("nba-elo.csv", header=TRUE)
forecast_to_cat <- function(value) {
if(value <= 0.5) {
return <- 2
}
else {
return <- 4
}
}
nba$forecast_cat <- lapply(nba$forecast,forecast_to_cat)
#nba$forecast_cat <- lapply(nba$forecast,factor)
game_result_num <- function(value) {
if("W" == value) {
return <- 1
}
else {
return <- 0
}
}
nba$isWin <- lapply(nba$game_result,game_result_num)
nbaWins <- nba[nba$game_result == 'W',]
ggplot(nbaWins, aes(x=game_result, y=forecast, fill=game_result)) +
geom_boxplot() +
theme_classic() +
xlab("Game Result") +
ylab("Elo Forecast") +
theme(legend.position = "none")
ggplot(nbaWins,aes(x=forecast_cat)) +
geom_bar() +
labs(x="Forecast Category",y="Number of Wins",title="Bar Graph (Number of Wins vs. Forecast Category)") +
theme_minimal()
nba$point_difference = nba$pts-nba$opp_pts
nbaPosPts = nba[nba$point_difference > 0,]
ggplot(nbaPosPts,aes(x=forecast,y=point_difference,color=forecast_cat)) +
geom_point() +
labs(x="Forecast",y="Point Difference",title="Scatter Plot (Point Difference vs. Forecast)") +
theme_minimal()
ggplot(nbaWins,aes(x=forecast_cat)) +
geom_bar() +
labs(x="Forecast Category",y="Number of Wins",title="Bar Graph (Number of Wins vs. Forecast Category)") +
theme_minimal()
#nba$forecast_cat <- lapply(nba$forecast,forecast_to_cat)
nba$forecast_cat <- lapply(nbas$forecast,cut(nbas$forecast,breaks=c(0,50,100)))
#nba$forecast_cat <- lapply(nba$forecast,forecast_to_cat)
nba$forecast_cat <- lapply(nbas$forecast,cut(nba$forecast,breaks=c(0,50,100)))
#nba$forecast_cat <- lapply(nba$forecast,forecast_to_cat)
nba$forecast_cat <- lapply(nba$forecast,cut(nba$forecast,breaks=c(0,50,100)))
#nba$forecast_cat <- lapply(nba$forecast,forecast_to_cat)
nba$forecast_cat <- lapply(nba$forecast,cut(breaks=c(0,50,100)))
#nba$forecast_cat <- lapply(nba$forecast,forecast_to_cat)
nba$forecast_cat <- cut(nba$forecast_cat, breaks=c(0,50,100))
library(ggplot2)
nba <- read.csv("nba-elo.csv", header=TRUE)
forecast_to_cat <- function(value) {
if(value <= 0.5) {
return <- 2
}
else {
return <- 4
}
}
#nba$forecast_cat <- lapply(nba$forecast,forecast_to_cat)
nba$forecast_cat <- cut(nba$forecast_cat, breaks=c(0,.5,1))
game_result_num <- function(value) {
if("W" == value) {
return <- 1
}
else {
return <- 0
}
}
nba$isWin <- lapply(nba$game_result,game_result_num)
nbaWins <- nba[nba$game_result == 'W',]
ggplot(nbaWins, aes(x=game_result, y=forecast, fill=game_result)) +
geom_boxplot() +
theme_classic() +
xlab("Game Result") +
ylab("Elo Forecast") +
theme(legend.position = "none")
ggplot(nbaWins,aes(x=forecast_cat)) +
geom_bar() +
labs(x="Forecast Category",y="Number of Wins",title="Bar Graph (Number of Wins vs. Forecast Category)") +
theme_minimal()
nba$point_difference = nba$pts-nba$opp_pts
nbaPosPts = nba[nba$point_difference > 0,]
ggplot(nbaPosPts,aes(x=forecast,y=point_difference,color=forecast_cat)) +
geom_point() +
labs(x="Forecast",y="Point Difference",title="Scatter Plot (Point Difference vs. Forecast)") +
theme_minimal()
#nba$forecast_cat <- lapply(nba$forecast,forecast_to_cat)
nba$forecast_cat <- cut(nba$forecast, breaks=c(0,.5,1))
library(ggplot2)
nba <- read.csv("nba-elo.csv", header=TRUE)
forecast_to_cat <- function(value) {
if(value <= 0.5) {
return <- 2
}
else {
return <- 4
}
}
#nba$forecast_cat <- lapply(nba$forecast,forecast_to_cat)
nba$forecast_cat <- cut(nba$forecast, breaks=c(0,.5,1))
game_result_num <- function(value) {
if("W" == value) {
return <- 1
}
else {
return <- 0
}
}
nba$isWin <- lapply(nba$game_result,game_result_num)
nbaWins <- nba[nba$game_result == 'W',]
ggplot(nbaWins, aes(x=game_result, y=forecast, fill=game_result)) +
geom_boxplot() +
theme_classic() +
xlab("Game Result") +
ylab("Elo Forecast") +
theme(legend.position = "none")
ggplot(nbaWins,aes(x=forecast_cat)) +
geom_bar() +
labs(x="Forecast Category",y="Number of Wins",title="Bar Graph (Number of Wins vs. Forecast Category)") +
theme_minimal()
nba$point_difference = nba$pts-nba$opp_pts
nbaPosPts = nba[nba$point_difference > 0,]
ggplot(nbaPosPts,aes(x=forecast,y=point_difference,color=forecast_cat)) +
geom_point() +
labs(x="Forecast",y="Point Difference",title="Scatter Plot (Point Difference vs. Forecast)") +
theme_minimal()
library(ggplot2)
nba <- read.csv("nba-elo.csv", header=TRUE)
nba$forecast_cat <- cut(nba$forecast, breaks=c(0,.5,1))
game_result_num <- function(value) {
if("W" == value) {
return <- 1
}
else {
return <- 0
}
}
nba$isWin <- lapply(nba$game_result,game_result_num)
nbaWins <- nba[nba$game_result == 'W',]
ggplot(nbaWins, aes(x=game_result, y=forecast, fill=game_result)) +
geom_boxplot() +
theme_classic() +
xlab("Game Result") +
ylab("Elo Forecast") +
theme(legend.position = "none")
ggplot(nbaWins,aes(x=forecast_cat,fill=forecast_cat)) +
geom_bar() +
labs(x="Forecast Category",y="Number of Wins",title="Bar Graph (Number of Wins vs. Forecast Category)") +
theme_minimal()
nba$point_difference = nba$pts-nba$opp_pts
nbaPosPts = nba[nba$point_difference > 0,]
ggplot(nbaPosPts,aes(x=forecast,y=point_difference,color=forecast_cat)) +
geom_point() +
labs(x="Forecast",y="Point Difference",title="Scatter Plot (Point Difference vs. Forecast)") +
theme_minimal()
library(ggplot2)
nba <- read.csv("nba-elo.csv", header=TRUE)
nba$forecast_cat <- cut(nba$forecast, breaks=c(0,.5,1), labels=c("Will Lose","Will Win"))
game_result_num <- function(value) {
if("W" == value) {
return <- 1
}
else {
return <- 0
}
}
nba$isWin <- lapply(nba$game_result,game_result_num)
nbaWins <- nba[nba$game_result == 'W',]
ggplot(nbaWins, aes(x=game_result, y=forecast, fill=game_result)) +
geom_boxplot() +
theme_classic() +
xlab("Game Result") +
ylab("Elo Forecast") +
theme(legend.position = "none")
ggplot(nbaWins,aes(x=forecast_cat,fill=forecast_cat)) +
geom_bar() +
labs(x="Forecast Category",y="Number of Wins",title="Bar Graph (Number of Wins vs. Forecast Category)") +
theme_minimal()
nba$point_difference = nba$pts-nba$opp_pts
nbaPosPts = nba[nba$point_difference > 0,]
ggplot(nbaPosPts,aes(x=forecast,y=point_difference,color=forecast_cat)) +
geom_point() +
labs(x="Forecast",y="Point Difference",title="Scatter Plot (Point Difference vs. Forecast)") +
theme_minimal()
library(ggplot2)
nba <- read.csv("nba-elo.csv", header=TRUE)
nba$forecast_cat <- cut(nba$forecast, breaks=c(0,.5,1), labels=c("Will Lose","Will Win"))
game_result_num <- function(value) {
if("W" == value) {
return <- 1
}
else {
return <- 0
}
}
nba$isWin <- lapply(nba$game_result,game_result_num)
nbaWins <- nba[nba$game_result == 'W',]
ggplot(nbaWins, aes(x=game_result, y=forecast, fill=game_result)) +
geom_boxplot() +
theme_classic() +
xlab("Game Result") +
ylab("Elo Forecast") +
theme(legend.position = "none")
ggplot(nbaWins,aes(x=forecast_cat,fill=forecast_cat)) +
geom_bar() +
labs(x="Forecast Category",y="Number of Wins",title="Bar Graph (Number of Wins vs. Forecast Category)") +
theme_minimal()
nba$point_difference = nba$pts-nba$opp_pts
nbaPosPts = nba[nba$point_difference > 0,]
ggplot(nbaPosPts,aes(x=forecast,y=point_difference,color=forecast_cat)) +
geom_point() +
labs(x="Forecast",y="Point Difference",title="Scatter Plot (Point Difference vs. Forecast)") +
theme_minimal()
